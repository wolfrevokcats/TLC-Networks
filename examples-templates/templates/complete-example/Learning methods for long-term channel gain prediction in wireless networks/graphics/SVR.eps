%!PS-Adobe-3.0 EPSF-3.0
%%HiResBoundingBox: 0.000000 0.000000 191.000000 173.000000
%APL_DSC_Encoding: UTF8
%APLProducer: (Version 10.10.2 (Build 14C1514) Quartz PS Context)
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 191 173
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
{ld}repeat pop
/SC{	
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		
/cm {cmmtx astore CM concat}bd	
/W{clip newpath}bd
/W*{eoclip newpath}bd
statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	
    true
}{
    pop	
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse
{	
    { 
	{ 
	    pop pop 
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd
/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd
/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd
/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	
dict begin
{def} repeat
pop		
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	
}bd
/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ 
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ 
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		
/cp_proc/x_proc ld 	
/base_charpath		
{
    /t_array xs
    /t_i 0 def
    { 
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ 
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ 
findfont dup length dict copy definefont pop
}bd
L3? dup dup{save exch}if
/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def
/setupFunEval 
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   
		    
	[ 
	    0 1 nRange 1 sub
	    { 
		    2 mul/nDim2 xd		
		    Range nDim2 get		
		    Range nDim2 1 add get	
		    1 index sub			
						
		    255 div			
		    exch			
	    }for
	]store
    end
}bd
/FunEval 
{
    begin
	
	nRange mul /val xd	
				
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd 
	    val	
	    add DataSource exch get 
	    mulRange nDim2 get mul 	
	    mulRange nDim2 1 add get 
	    add 
	}for	
    end
}bd
/max 
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd
/sh2
{	
	/Coords load aload pop 	
	3 index 3 index translate	
					
	3 -1 roll sub	
	3 1 roll exch 	
	sub				
	2 copy
	dup mul exch dup mul add sqrt	
	dup
	scale  
	atan	
	
	rotate		
	
	/Function load setupFunEval	
	
	
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	
	grestore	
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd
/shp	
{	
	4 copy
	
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
	
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse
	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd
/calcmaxs
{	
	
	xmin dup mul ymin dup mul add sqrt		
	xmax dup mul ymin dup mul add sqrt		
	xmin dup mul ymax dup mul add sqrt		
	xmax dup mul ymax dup mul add sqrt		
	max max max								
}bd
/sh3
{	
	/Coords load aload pop 	
	5 index 5 index translate	
	3 -1 roll 6 -1 roll sub		
	3 -1 roll 5 -1 roll sub		
	2 copy dup mul exch dup mul add sqrt
	/dx xs						
	2 copy 0 ne exch 0 ne or
	{
		
		exch atan rotate	
	}{
		pop pop
	}ifelse
	
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	
	/Nsteps xs		
	setupFunEval		
	
	
	
	
	
	dx r2 add r1 lt{
		
		0 
	}{
		dx r1 add r2 le
		{ 
			1
		}{ 
			r1 r2 eq
			{	
				2
			}{ 
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		
	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	
		{	
			0/Function load FunEval sc	
			
			
			
			
			{ 
				{	
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				}
				{	
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	
					
					
				
					
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	
					
				
					r2 r1 gt{	
						
						0 r1
						r1 neg r2 r1 sub div dx mul	
						0	
						shp	
					}{	
						
						
						
						0 r1 calcmaxs	
						dup
						
						r2 add dx mul dx r1 r2 sub sub div
						neg				
						exch 1 index	
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	
		}if
	}if
	
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	
	
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	
		{	
			Nsteps/Function load FunEval sc	
			
			
			
			
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		
				} 
				{	
					
					
					xmax abs r1 add r1 dx r1 shp
				}	
				{	
			
					r2 r1 gt{
						
						
						
						calcmaxs dup	
						
						r1 add dx mul dx r2 r1 sub sub div	
						exch 1 index	
						exch sub
						dx r2
						shp
					}{	
						
						r1 neg r2 r1 sub div dx mul	
						0		
						dx 		
						r2		
						shp
					}ifelse
				}
			}			
			sh3tp get exec	
		}if
	}if
}bd
/sh		
{	
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	
					2 index sub				
					3 index					
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd
{restore}if not dup{save exch}if
	L3?{	
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if
end
setpacking
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 191 173
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: Helvetica
%!FontType1-1.0: Helvetica 1.0000.0.0000
14 dict begin/FontName /Helvetica def
/PaintType 0 def
/Encoding 256 array 0 1 255{1 index exch/.notdef put}for
dup 33 /epsilon put
dup 34 /xi put
dup 35 /asterisk put
dup 36 /j put
dup 37 /i put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[2048 -1947 1 index div -985 2 index div 2961 3 index div 2297 5 -1 roll div]cvx def
/sfnts [<






00>] def
/CharStrings 7 dict dup begin
/.notdef 0 def
/asterisk 1 def
/i 2 def
/j 3 def
/epsilon 4 def
/xi 5 def
/u20B8 6 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.00048828125 0 0 0.00048828125 0 0 ] def
/FontBBox{-1947 -985 2961 2297}def
/UniqueID 4142842 def
currentdict currentfile eexec

4CE86BA54E6A3251C7C0F62384086BEB1B64F307D6808858F31E96F4CCEE4B61FF35AF69C86475F1EBB89656EA9D69B7899C1491826ECDABD982258B1926B540A89207EE347239ED556526F58DB9B224099ABB0CFB3A5C820836F737089244DC24BD42C0F4A0538338F58E235700C9F874580F11C70E8FF838B62924D21C102C4BE6874FEB570287C2C9B33105C0BA9A951A3879B1B4A3E09184F8914336DD166811C664AC483D163844D0B65AEB2237A13510AD7831CBB4D3B6EBC29B5AF84C0781CE64A97B5D08A7596C778EEA39550CBF0D02ADB7368980B094E152D638871DABC8375B4945ECC8B963B2F700FBBC89A80256F805245CE4BCCA4E994FECF84B1A3AF2D555AD8ADF2559B247786473D23D291F26B6E862525E9B23046DE329FA666F007F87BB80D7B9634DE683972DFC76A9B79A218DF1650226E24967600632947F442DE7C68EBAE61A8C09FD37C0F89A290540E1F68A410645D7865D2BCA765C6D59BFE118E2983481F2B9A887D6A0DA0CB9AC27DD50655C5A5E528876EE30AF19F1DA90B08D030ABF324B28B05BFD824C638D083AF3A576DDD35B6E22A0305A28E090141015EC04AA0C9CC93CBF48D29D1026BF28134744E5059D322E2511D839BA771F6E2DE7BB2B9813004AE3470FAF9316CCE12507AAE1060202945C61BCA3B8E2E7EB338369472338F70DE62C7891688D112CDF84
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark end
%APLT1End
%RBIEndFontSubset
/Helvetica cguidfix
/F1.1/Helvetica renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ { 1.8008  exp } bind { 1.8008  exp } bind { 1.8008  exp } bind ] def 
/MatrixABC [ 0.4295 0.2318 0.0204 0.3278 0.6722 0.1111 0.1933 0.0960 0.9578 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
[ /CIEBasedA 5 dict dup begin /WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeA { { 1.8008  exp } bind  exec} bind 
def 
/MatrixA [ 0.9642 1.0000 0.8249 ] def 
/RangeLMN [ 0.0 2.0000 0.0 2.0000 0.0 2.0000 ] def 
/DecodeLMN [ { 0.9857  mul} bind { 1.0000  mul} bind { 1.3202  mul} bind ] def 
end ] /Cs2 exch/ColorSpace dr pop
%%EndPageSetup
1 J
1 j
[
4
4
] 0 d
0.60000002 i
/Cs1 SC
0 0 0 sc
q
0 0 191 173 rc
1 0 0 -1 -144 300 cm
161.85161 220.06123 m
283.71371 149.7041 l
S
194.96962 276.96667 m
316.83173 206.60954 l
S
[] 0 d
177.87875 248.82101 m
299.74088 178.4639 l
S
1 1 1 sc
CM
132.35939 134.2552 m
133.92859 132.59547 133.92859 129.90453 132.35939 128.2448 c
130.79021 126.58507 128.24608 126.58507 126.67689 128.2448 c
125.1077 129.90453 125.1077 132.59547 126.67689 134.2552 c
128.24608 135.91493 130.79021 135.91493 132.35939 134.2552 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
276.35941 165.7448 m
277.92859 167.40453 277.92859 170.09547 276.35941 171.7552 c
274.79022 173.41493 272.24606 173.41493 270.67688 171.7552 c
269.1077 170.09547 269.1077 167.40453 270.67688 165.7448 c
272.24606 164.08507 274.79022 164.08507 276.35941 165.7448 c
S
1 1 1 sc
CM
58.786823 86.755203 m
60.356014 85.095474 60.356014 82.404526 58.786823 80.744797 c
57.217644 79.085068 54.6735 79.085068 53.104321 80.744797 c
51.53513 82.404526 51.53513 85.095474 53.104321 86.755203 c
54.6735 88.414932 57.217644 88.414932 58.786823 86.755203 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
202.78682 213.2448 m
204.35602 214.90453 204.35602 217.59547 202.78682 219.2552 c
201.21764 220.91493 198.67351 220.91493 197.10432 219.2552 c
195.53513 217.59547 195.53513 214.90453 197.10432 213.2448 c
198.67351 211.58507 201.21764 211.58507 202.78682 213.2448 c
S
1 1 1 sc
CM
126.32311 86.755203 m
127.8923 85.095474 127.8923 82.404526 126.32311 80.744797 c
124.75393 79.085068 122.20979 79.085068 120.6406 80.744797 c
119.07142 82.404526 119.07142 85.095474 120.6406 86.755203 c
122.20979 88.414932 124.75393 88.414932 126.32311 86.755203 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
270.32312 213.2448 m
271.8923 214.90453 271.8923 217.59547 270.32312 219.2552 c
268.75394 220.91493 266.20978 220.91493 264.64059 219.2552 c
263.07141 217.59547 263.07141 214.90453 264.64059 213.2448 c
266.20978 211.58507 268.75394 211.58507 270.32312 213.2448 c
S
1 1 1 sc
CM
100.78683 78.755203 m
102.35601 77.095474 102.35601 74.404526 100.78683 72.744797 c
99.217644 71.085068 96.6735 71.085068 95.104317 72.744797 c
93.535133 74.404526 93.535133 77.095474 95.104317 78.755203 c
96.6735 80.414932 99.217644 80.414932 100.78683 78.755203 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
244.78682 221.2448 m
246.35602 222.90453 246.35602 225.59547 244.78682 227.2552 c
243.21764 228.91493 240.67351 228.91493 239.10432 227.2552 c
237.53513 225.59547 237.53513 222.90453 239.10432 221.2448 c
240.67351 219.58507 243.21764 219.58507 244.78682 221.2448 c
S
1 1 1 sc
CM
51.079014 43.255199 m
52.648205 41.595474 52.648205 38.904526 51.079014 37.244801 c
49.509834 35.585064 46.965691 35.585064 45.396511 37.244801 c
43.82732 38.904526 43.82732 41.595474 45.396511 43.255199 c
46.965691 44.914936 49.509834 44.914936 51.079014 43.255199 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
195.07901 256.74481 m
196.64821 258.40454 196.64821 261.09546 195.07901 262.75519 c
193.50983 264.41495 190.9657 264.41495 189.39651 262.75519 c
187.82732 261.09546 187.82732 258.40454 189.39651 256.74481 c
190.9657 255.08507 193.50983 255.08507 195.07901 256.74481 c
S
1 1 1 sc
CM
90.859398 103.83701 m
92.428581 102.17728 92.428581 99.486328 90.859398 97.826599 c
89.290215 96.16687 86.746071 96.16687 85.176888 97.826599 c
83.607704 99.486328 83.607704 102.17728 85.176888 103.83701 c
86.746071 105.49673 89.290215 105.49673 90.859398 103.83701 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
234.85939 196.16299 m
236.42859 197.82272 236.42859 200.51367 234.85939 202.1734 c
233.29021 203.83313 230.74608 203.83313 229.1769 202.1734 c
227.6077 200.51367 227.6077 197.82272 229.1769 196.16299 c
230.74608 194.50327 233.29021 194.50327 234.85939 196.16299 c
S
1 1 1 sc
CM
123.78683 118.12253 m
125.35601 116.4628 125.35601 113.77185 123.78683 112.11212 c
122.21764 110.45239 119.6735 110.45239 118.10432 112.11212 c
116.53513 113.77185 116.53513 116.4628 118.10432 118.12253 c
119.6735 119.78226 122.21764 119.78226 123.78683 118.12253 c
f
0 0 0 sc
1 0 0 -1 -144 300 cm
267.78683 181.87747 m
269.35602 183.5372 269.35602 186.22815 267.78683 187.88788 c
266.21765 189.54761 263.67349 189.54761 262.10431 187.88788 c
260.53513 186.22815 260.53513 183.5372 262.10431 181.87747 c
263.67349 180.21774 266.21765 180.21774 267.78683 181.87747 c
S
CM
67.786827 34.255199 m
69.35601 32.595474 69.35601 29.904526 67.786827 28.244799 c
66.217644 26.585064 63.6735 26.585064 62.104321 28.244799 c
60.53513 29.904526 60.53513 32.595474 62.104321 34.255199 c
63.6735 35.914936 66.217644 35.914936 67.786827 34.255199 c
f
1 0 0 -1 -144 300 cm
211.78682 265.74481 m
213.35602 267.40454 213.35602 270.09546 211.78682 271.75519 c
210.21764 273.41495 207.67351 273.41495 206.10432 271.75519 c
204.53513 270.09546 204.53513 267.40454 206.10432 265.74481 c
207.67351 264.08505 210.21764 264.08505 211.78682 265.74481 c
S
CM
86.286827 122.2552 m
87.85601 120.59547 87.85601 117.90453 86.286827 116.2448 c
84.717644 114.58507 82.1735 114.58507 80.604317 116.2448 c
79.035133 117.90453 79.035133 120.59547 80.604317 122.2552 c
82.1735 123.91493 84.717644 123.91493 86.286827 122.2552 c
f
1 0 0 -1 -144 300 cm
230.28682 177.7448 m
231.85602 179.40453 231.85602 182.09547 230.28682 183.7552 c
228.71764 185.41493 226.17351 185.41493 224.60432 183.7552 c
223.03513 182.09547 223.03513 179.40453 224.60432 177.7448 c
226.17351 176.08507 228.71764 176.08507 230.28682 177.7448 c
S
CM
161.31398 87.862747 m
162.88318 86.203018 162.88318 83.51207 161.31398 81.852341 c
159.7448 80.192612 157.20067 80.192612 155.63148 81.852341 c
154.06229 83.51207 154.06229 86.203018 155.63148 87.862747 c
157.20067 89.522476 159.7448 89.522476 161.31398 87.862747 c
f
1 0 0 -1 -144 300 cm
305.314 212.13725 m
306.88318 213.79698 306.88318 216.48793 305.314 218.14766 c
303.74481 219.80739 301.20065 219.80739 299.63147 218.14766 c
298.06229 216.48793 298.06229 213.79698 299.63147 212.13725 c
301.20065 210.47752 303.74481 210.47752 305.314 212.13725 c
S
CM
31.171743 123.7552 m
32.740932 122.09547 32.740932 119.40453 31.171743 117.7448 c
29.602562 116.08507 27.058418 116.08507 25.489237 117.7448 c
23.920048 119.40453 23.920048 122.09547 25.489237 123.7552 c
27.058418 125.41493 29.602562 125.41493 31.171743 123.7552 c
f
1 0 0 -1 -144 300 cm
175.17174 176.2448 m
176.74094 177.90453 176.74094 180.59547 175.17174 182.2552 c
173.60255 183.91493 171.05843 183.91493 169.48924 182.2552 c
167.92004 180.59547 167.92004 177.90453 169.48924 176.2448 c
171.05843 174.58507 173.60255 174.58507 175.17174 176.2448 c
S
CM
137.34126 34.755199 m
138.91046 33.095474 138.91046 30.404526 137.34126 28.744799 c
135.77208 27.085064 133.22795 27.085064 131.65877 28.744799 c
130.08957 30.404526 130.08957 33.095474 131.65877 34.755199 c
133.22795 36.414936 135.77208 36.414936 137.34126 34.755199 c
f
1 0 0 -1 -144 300 cm
281.34128 265.24481 m
282.91046 266.90454 282.91046 269.59546 281.34128 271.25519 c
279.77209 272.91495 277.22794 272.91495 275.65875 271.25519 c
274.08957 269.59546 274.08957 266.90454 275.65875 265.24481 c
277.22794 263.58505 279.77209 263.58505 281.34128 265.24481 c
S
CM
108.8594 150.7552 m
110.42858 149.09547 110.42858 146.40453 108.8594 144.7448 c
107.29021 143.08507 104.74607 143.08507 103.17689 144.7448 c
101.6077 146.40453 101.6077 149.09547 103.17689 150.7552 c
104.74607 152.41493 107.29021 152.41493 108.8594 150.7552 c
f
1 0 0 -1 -144 300 cm
252.85939 149.2448 m
254.42859 150.90453 254.42859 153.59547 252.85939 155.2552 c
251.29021 156.91493 248.74608 156.91493 247.1769 155.2552 c
245.6077 153.59547 245.6077 150.90453 247.1769 149.2448 c
248.74608 147.58507 251.29021 147.58507 252.85939 149.2448 c
S
CM
58.786823 104.83701 m
60.356014 103.17728 60.356014 100.48633 58.786823 98.826599 c
57.217644 97.16687 54.6735 97.16687 53.104321 98.826599 c
51.53513 100.48633 51.53513 103.17728 53.104321 104.83701 c
54.6735 106.49673 57.217644 106.49673 58.786823 104.83701 c
f
1 0 0 -1 -144 300 cm
202.78682 195.16299 m
204.35602 196.82272 204.35602 199.51367 202.78682 201.1734 c
201.21764 202.83313 198.67351 202.83313 197.10432 201.1734 c
195.53513 199.51367 195.53513 196.82272 197.10432 195.16299 c
198.67351 193.50327 201.21764 193.50327 202.78682 195.16299 c
S
286.59528 157.10687 m
295.28674 170.39313 l
S
CM
153.91446 125.59 m
152.79308 130.59225 l
149.78043 128.62148 l
h
153.91446 125.59 m
f
0 J
0 j
1 0 0 -1 -144 300 cm
297.91446 174.40999 m
296.79306 169.40775 l
293.78043 171.37852 l
h
297.91446 174.40999 m
S
CM
139.96758 146.90999 m
141.08896 141.90775 l
144.10159 143.87852 l
h
139.96758 146.90999 m
f
1 0 0 -1 -144 300 cm
283.96756 153.09001 m
285.08896 158.09225 l
288.10159 156.12148 l
h
283.96756 153.09001 m
S
1 J
1 j
304.52271 185.02507 m
313.21417 198.31133 l
S
CM
171.84189 97.671806 m
170.7205 102.67406 l
167.70787 100.70328 l
h
171.84189 97.671806 m
f
0 J
0 j
1 0 0 -1 -144 300 cm
315.84189 202.32819 m
314.72052 197.32594 l
311.70786 199.29672 l
h
315.84189 202.32819 m
S
CM
157.895 118.9918 m
159.01639 113.98955 l
162.02904 115.96033 l
h
157.895 118.9918 m
f
1 0 0 -1 -144 300 cm
301.89502 181.00821 m
303.01639 186.01045 l
306.02902 184.03967 l
h
301.89502 181.00821 m
S
1 J
1 j
263.59528 245.10689 m
272.28674 258.39316 l
S
CM
130.91446 37.589993 m
129.79308 42.592239 l
126.78043 40.62146 l
h
130.91446 37.589993 m
f
0 J
0 j
1 0 0 -1 -144 300 cm
274.91446 262.41 m
273.79309 257.40775 l
270.78043 259.37854 l
h
274.91446 262.41 m
S
CM
116.96758 58.909977 m
118.08896 53.90773 l
121.1016 55.87851 l
h
116.96758 58.909977 m
f
1 0 0 -1 -144 300 cm
260.96759 241.09003 m
262.08896 246.09227 l
265.10159 244.12149 l
h
260.96759 241.09003 m
S
1 J
1 j
178.79617 188.6483 m
184.61591 197.7699 l
S
CM
43.197674 98.183556 m
42.133362 103.19827 l
39.098457 101.26194 l
h
43.197674 98.183556 m
f
0 J
0 j
1 0 0 -1 -144 300 cm
187.19768 201.81644 m
186.13336 196.80174 l
183.09845 198.73807 l
h
187.19768 201.81644 m
S
CM
32.214409 115.39825 m
33.278721 110.38354 l
36.313625 112.31986 l
h
32.214409 115.39825 m
f
1 0 0 -1 -144 300 cm
176.21442 184.60176 m
177.27872 189.61646 l
180.31363 187.68013 l
h
176.21442 184.60176 m
S
/Cs2 SC
0 sc
0 i
1 0 0 -1 153.38847 140.31218 cm
/F1.1[ 16 0 0 -16 0 0]sf
-4.5 5.5 m
(!)s
1 0 0 -1 171.5 112.86732 cm
-4.5 5.5 m
(!)s
1 0 0 -1 133.5 49.123711 cm
/F1.1[ 14 0 0 -14 0 0]sf
-6.5 5.5 m
("#)[ 7.000000 0.000000 ] xS
1 0 0 -1 42.638031 114.49999 cm
-3.5 5.5 m
(")s
1 0 0 -1 135.5 45.487629 cm
/F1.1[ 10 0 0 -10 0 0]sf
-1.5 4 m
($)s
1 0 0 -1 48.073524 108.8318 cm
-1.5 4 m
(%)s
ep
end
%%Trailer
%%EOF
